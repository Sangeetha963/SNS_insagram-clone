// 
// Generated by @himenon/openapi-typescript-code-generator v0.19.1
// 
// OpenApi : 3.0.0
// 
// 


export namespace Schemas {
    export interface ClientAuthCheckRequestDto {
        userId: string;
    }
    export interface ClientAuthTokenResponseDto {
        /** トークン */
        access_token: string;
        /** トークン種別 */
        token_type: "bearer";
        /** 有効秒数 */
        expires_in: number;
        /** リフレッシュトークン */
        refresh_token: string;
        /** 要求したスコープと違う場合は追加 */
        scope: string;
    }
    export interface ClientSigninWithPasswordRequestDto {
        id: string;
        password: string;
    }
    export interface ClientRefreshTokenRequestDto {
        refreshToken: string;
    }
    export interface ClientRefreshTokenResponseDto {
        /** トークン */
        access_token: string;
        /** トークン種別 */
        token_type: "bearer";
        /** 有効秒数 */
        expires_in: number;
        /** 要求したスコープと違う場合は追加 */
        scope: string;
    }
    export interface CustomerAuthEntities {
        uuid: string;
        deletedAt: string;
        createdAt: string;
        updatedAt: string;
        authType: "password" | "twitter" | "facebook";
    }
    export interface CustomerEntities {
        uuid: string;
        deletedAt: string;
        createdAt: string;
        updatedAt: string;
        email: string;
        /** 氏名 */
        name: string;
        auth: Schemas.CustomerAuthEntities[];
        /** followers */
        following: Schemas.CustomerEntities;
        /** follow */
        follower: Schemas.CustomerEntities;
    }
    export interface ClientCustomerCreateDto {
        email: string;
        password: string;
        passwordConfirm: string;
        name: string;
    }
    export interface ClientCustomerUpdateDto {
        email: string;
        name: string;
    }
    export interface ClientCustomerResetPasswordDto {
        /** 認証トークン */
        credential: string;
        /** password */
        password: string;
    }
    export interface ClientCustomerChangePasswordDto {
        /** 現在のパスワード */
        oldPassword: string;
        /** password */
        password: string;
    }
    export interface FileMeta {
    }
    export interface FileEntities {
        uuid: string;
        deletedAt: string;
        createdAt: string;
        updatedAt: string;
        /** 名称 */
        name?: {} | null;
        /** ファイル名 */
        filename: string;
        mimeType: string;
        path: string;
        uploadType: 0 | 1;
        filesize: number;
        meta?: (Schemas.FileMeta) | null;
    }
    export interface Buffer {
    }
    export interface ClientFileUploadDto {
        meta?: {};
        /** ソート順 */
        sort?: number;
        files: string;
    }
    export interface PostEntities {
        uuid: string;
        deletedAt: string;
        createdAt: string;
        updatedAt: string;
        content?: string;
        /** ユーザー */
        customer: Schemas.CustomerEntities;
        /** ユーザー */
        favouritePost: Schemas.CustomerEntities;
    }
    export interface ClientPostUpdateDto {
        content: string;
    }
    export interface ClientFavouriteDto {
        postId: string;
    }
    export interface ClientFollowUserDto {
        userId: string;
    }
}
